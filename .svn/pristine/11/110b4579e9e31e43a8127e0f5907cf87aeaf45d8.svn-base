package com.zrtjoa.service.impl;

import com.zrtjoa.annotation.PagingQuery;
import com.zrtjoa.common.ResultUtils;
import com.zrtjoa.constant.SysConstant;
import com.zrtjoa.dao.CoursesDao;
import com.zrtjoa.entity.Courses;
import com.zrtjoa.entity.WeekClass;
import com.zrtjoa.enums.WeekEnum;
import com.zrtjoa.service.CourseService;
import com.zrtjoa.util.ExcelUtil;
import org.apache.commons.collections4.CollectionUtils;
import org.apache.commons.lang.StringUtils;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.util.CellRangeAddress;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import javax.servlet.http.HttpServletResponse;
import javax.validation.constraints.NotNull;
import java.io.IOException;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import static com.zrtjoa.constant.SysConstant.CLASS_ROOM;
import static com.zrtjoa.constant.SysConstant.Punctuation.COMMA;
import static com.zrtjoa.constant.SysConstant.TIME;
import static com.zrtjoa.enums.WeekEnum.*;
import static com.zrtjoa.util.FileUtil.setResponseHeader;

/**
 * copyright    <a href="http://www.qaqavr.com/>中锐</a>
 * <pre>
 *     @author      zwy
 *     @date        2018/12/6 15:33
 *     email        1092478224@qq.com
 *     desc         课程管理接口实现类
 * </pre>
 */
@Service
public class CourseServiceImpl implements CourseService {

    @Autowired
    private CoursesDao coursesDao ;


    @Override
    @PagingQuery
    public List<WeekClass> queryCourseList(Courses courses) {

        List<Courses> coursesList = coursesDao.queryCourseList(courses);

        List<WeekClass> weekList = new ArrayList<>();

        //按教室分组，以教室名作为map的key
        Map<String,List<Courses>> courseMapList = coursesList.stream().collect(Collectors.groupingBy(Courses::getClassroom));

        courseMapList.keySet().forEach(key->{
            WeekClass wc = new WeekClass();
            courseMapList.get(key).forEach(value->{
                if(StringUtils.isBlank(wc.getClassroom())){
                    wc.setClassroom(value.getClassroom());
                    wc.setTimeSlot(value.getDate());
                }
                switch (WeekEnum.returnDayByCode(value.getWeek())){
                    case MONDAY:wc.setMonday(value.getClasses()+ COMMA +value.getTeacher());break;
                    case TUESDAY:wc.setTuesday(value.getClasses()+ COMMA +value.getTeacher());break;
                    case WEDNESDAY:wc.setWednesday(value.getClasses()+ COMMA +value.getTeacher());break;
                    case THURSDAY:wc.setThursday(value.getClasses()+ COMMA +value.getTeacher());break;
                    case FRIDAY:wc.setFriday(value.getClasses()+ COMMA +value.getTeacher());break;
                    default:case SATURDAY:
                }
            });
            weekList.add(wc);
        });
        return weekList ;
    }

    @Override
    public void exportCourse(HttpServletResponse response, Courses courses){

        List<WeekClass> weekClasses = queryCourseList(courses);

        //excel文件名
        String fileName = "南开区老年大学课表"+System.currentTimeMillis()+".xls";

        //sheet名
        String sheetName = "2018秋课表";

        //excel标题
        String[] title = {TIME,CLASS_ROOM,MONDAY.day,TUESDAY.day,WEDNESDAY.day,TUESDAY.day,FRIDAY.day};

        String values[][] = new String[weekClasses.size()][];

        for (int i = 0; i < weekClasses.size(); i++) {
            values[i] = new String[title.length];
            WeekClass obj = weekClasses.get(i);
            values[i][0] = obj.getTimeSlot();
            values[i][1] = obj.getClassroom();
            values[i][2] = obj.getMonday();
            values[i][3] = obj.getTuesday();
            values[i][4] = obj.getWednesday();
            values[i][5] = obj.getThursday();
            values[i][6] = obj.getFriday();
        }

        HSSFWorkbook wb = ExcelUtil.getHSSFWorkbook(sheetName,"课表",title,values, null);

        HSSFSheet sheet = wb.getSheet(sheetName);

        CellRangeAddress callRangeAddress = new CellRangeAddress(0,0,0,6);
        sheet.addMergedRegion(callRangeAddress);

        //按时间段分类
        Map<String,List<WeekClass>> mapWeekClass = weekClasses.stream().collect(Collectors.groupingBy(WeekClass::getTimeSlot));

        for (int i = 2 ;i <mapWeekClass.keySet().size()+2;i++){
            List<WeekClass> wc = mapWeekClass.get(mapWeekClass.keySet().toArray()[i-2]);
            //创建合并单元格对象(起始行,结束行,起始列,结束列)
            callRangeAddress = new CellRangeAddress(i,wc.size()+i-1,0,0);
            sheet.addMergedRegion(callRangeAddress);
        }

        //响应到客户端
        setResponseHeader(response, fileName);
        try {
            OutputStream os = response.getOutputStream();
            wb.write(os);
            os.flush();
            os.close();
        } catch (IOException e) {
            e.printStackTrace();
        }

    }
}
