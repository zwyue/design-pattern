package com.zrtjoa.exception;

/**
 * 异常枚举类
 *
 * @author admin
 * @date 2018/11/28 14:07
 */
public enum ExceptionEnum {

     /**
      * Exception Enum
      */
    SUCCESS(0,"成功")

    ,NULL_EXCEPT(10001,"用户名或密码不能为空")

    ,NOT_EXIST(10002,"用户不存在")

    ,ACCOUNT_FORBID(10003,"账户被停用")

    ,NO_ROGHT(10004,"您当前无登陆权限")

    ,LOGIN_FAILED(10005,"登陆失败")

    ,TEACHER_EXIST(20001,"教师已存在")

    ,DELETE_FAILED(20002,"教师删除失败")

    ,UPDATE_FAILED(20003,"教师更新失败")
    ;

    public final Integer errorCode ;

    public final String errorMessage ;

    ExceptionEnum(Integer errorCode, String errorMessage){
        this.errorCode = errorCode ;
        this.errorMessage = errorMessage ;
    }

    /**
     * 根据code获取枚举
     *
     * @author zwy
     * @date 2018/12/20 13:31
     */
    public static ExceptionEnum enumOfByCode(Integer code){
        for (ExceptionEnum returnEnum : values()){
            if (code.equals(returnEnum.errorCode)){
                return returnEnum ;
            }
        }
        throw new IllegalArgumentException("no matching code for [" + code + "]");
    }

   /**
    * 根据信息获取枚举
    *
    * @author zwy
    * @date 2018/12/20 13:31
    */
    public static ExceptionEnum enumOfByMsg(String msg){
        for (ExceptionEnum returnEnum : values()){
            if(msg.equals(returnEnum.errorMessage)){
                return returnEnum ;
            }
        }
        throw new IllegalArgumentException("no matching msg for [" + msg + "]");
    }
}
