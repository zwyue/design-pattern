package com.zwyue.behavior.state;

/**
 * 行为型设计模式，状态模式
 *
 * 状态模式一般用来实现状态机，而状态机常用在游戏、工作流引擎等系统开发中。
 * 不过，状态机的实现方式有多种，除了状态模式，比较常用的还有分支逻辑法和查表法。
 *
 * 有限状态机，英文翻译是 Finite State Machine，缩写为 FSM，简称为状态机。
 * 状态机有 3 个组成部分：状态（State）、事件（Event）、动作（Action）。
 * 其中，事件也称为转移条件（Transition Condition）。事件触发状态的转移及动作的执行。
 * 不过，动作不是必须的，也可能只转移状态，不执行任何动作。
 *
 * 状态机实现方式一：分支逻辑法
 * 利用 if-else 或者 switch-case 分支逻辑，参照状态转移图，将每一个状态转移原模原样地直译成代码。对于简单的状态机来说，这种实现方式最简单、最直接，是首选。
 *
 * 状态机实现方式二：查表法
 * 对于状态很多、状态转移比较复杂的状态机来说，查表法比较合适。通过二维数组来表示状态转移图，能极大地提高代码的可读性和可维护性。
 *
 * 状态机实现方式三：状态模式
 * 对于状态并不多、状态转移也比较简单，但事件触发执行的动作包含的业务逻辑可能比较复杂的状态机来说，我们首选这种实现方式。
 */